https://github.com/nss1111/web-study.git

원하는 폴더 선택해서
git init 명령으로 깃허브 성격으로 만든다
git remote add origin https://github.com/nss1111/web-study.git


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


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


git에 파일을 올리려면 아래 3가지 명령어가 한 set로 순서대로 움직인다.
git add .
git commit -m '메시지'
git push origin master



echo "# web-study" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/nss1111/web-study.git
git push -u origin main


네트워크 통신 방식
get 방식
- 로그인 화면 그림파일, API만 요청

post 방식
- 로그인 성공 상태 값, API 요청 + 데이터 전달


기획(기능 요건, 명세 정의) -> 디자인(디자인 진행, 프로트 개발자 개발 가능 피드백) -> 개발(디자인 토대로 프로트/화면 개발) -> QA(배포 전 프로덕트 테스트, Quality Assurance) -> 배포(최종 프러덕트 배포 및 트래픽 픽셀 체크)

서버 개발자 -> 기획부터 기능 개발 == API 개발


Front-End = 웹 게시자(디자인에서 코드로) + API 디스플레이에 연결
프론트 엔드: html, css, java script
알아두면 좋은 프론트 엔드 기술: React, VUE, Angular

백엔드 = 개발 API 및 서버
백엔드: 자바, 파이썬, 자바스크립트, 루비
프레임워크: spring, django, nodejs, RAILS

데이터베이스 = 데이터 저장 및 관리
서버컴퓨터 : amazon web services, Google Cloud Platform, Microsoft Azure, Naver CLOUD PLATFORM
DATABase: mongoDB, postagraSQL, MYSql, Maria DB

웹 서비스 리스 = IP 주소 + 도메인에 연결(www.domain.com)
Ex) 아마존 웹서비스, 구글 클라우드 플랫폼, 마이크로소프트 애저, 네이버 클라우드 플랫폼


[Front-End]
- 화면 디자인과 기능을 구현
- 일반적으로 HTML, CSS, JS를 통해 구현할 수 있다.
- 성능면이나 코드 관리에서 이점을 얻고 싶으면 React, Angular, Vue 와 같은 프레임워크나 라이브러리 같은 도구를 사용한다.

[Back-End]
- Java, Python, JS, Ruby 같은 프로그램 언어를 사용한다.
- spring, django, node js, RAILS 같은 프레임워크를 이용하여 필요한 기능만 꺼내 쓸 수 있다.

[Database]
- 데이터 저장/관리
- mongoDB, Postgre SQL, MySQL, Maria DB

[서버 컴퓨터 임대]
- IP를 가지고 있는 서버 컴퓨터에 업로드하여 웹 서비스 제공(도메인 사용)
- AWS, Google Cloud Platform, Microsoft Azure, NAVER CLOUD PLATFORM